services:
  rabbitmq:
    image: rabbitmq:4.1-management-alpine
    container_name: met-rmq
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
    volumes:
      - "./.rmq_enabled_plugins:/etc/rabbitmq/enabled_plugins"
    ports:
      - 5675:5672
      - 15675:15672
      - 1883:1883
    networks:
      - metereolog
    user: "999"
  postgres:
    image: timescale/timescaledb-ha:pg17
    container_name: met-postgres
    shm_size: 128mb
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - ./backend/initdb.sh:/docker-entrypoint-initdb.d/initdb.sh:ro
    networks:
      - metereolog
  api: &server-recipe
    build:
      context: "./backend"  
      dockerfile: "metereolog.dockerfile"
    image: metereolog-server 
    pull_policy: never
    command: "python manage.py runserver_plus 0.0.0.0:8009"
    volumes:
      - ./backend:/code
    ports: 
      - 8009:8009
    environment:
      SECRET_KEY: "${SECRET_KEY}" # change this for production environment
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      DJANGO_SETTINGS_MODULE: "metereolog.settings.production"
    stdin_open: true
    tty: true
    networks:
      - metereolog
    container_name: met-api
    depends_on:
      - postgres
  message-hub:
    <<: *server-recipe
    ports: []
    command: python manage.py run_message_hub 
    container_name: met-msg-hub
    depends_on:
      - postgres
      - rabbitmq
  nginx:
    image: nginx
    container_name: metereolog
    ports:
      - 80:8008
    volumes:
      - ./frontend/nginx/nginx.prod.conf:/etc/nginx/conf.d/prod.conf
      - ./frontend/dist:/var/www/dist
      - ./backend/metereolog/static:/var/www/static
      - ./backend/metereolog/media:/var/www/media
    networks:
      - metereolog
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - ui
      - api
  ui:
    container_name: met-ui
    build:
      context: ./frontend
      dockerfile: metereolog-ui.dockerfile
    networks:
      - metereolog
    volumes:
      - ./frontend:/code
      - /code/node_modules
    ports:
      - 8010
    stdin_open: true
    tty: true
networks:
  metereolog:
    name: metereolog
    external: true
